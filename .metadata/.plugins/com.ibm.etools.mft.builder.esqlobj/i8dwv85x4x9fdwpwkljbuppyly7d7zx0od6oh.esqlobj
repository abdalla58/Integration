CREATE COMPUTE MODULE SendSMS_validation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE inPayLoad REFERENCE TO InputRoot.XMLNSC.sms;
		DECLARE phonelength BOOLEAN FALSE;
		DECLARE userName, userPass CHARACTER '';
		DECLARE Smsid  REFERENCE TO inPayLoad ;
		SET Smsid = FIELDVALUE(InputRoot.XMLNSC.sms.(XMLNSC.Attr)id);
		
		SET userPass = '123456';
		IF LENGTH(inPayLoad.rec) = 11 THEN
			SET phonelength = TRUE;
		END IF;
		
		CASE
		WHEN STARTSWITH(inPayLoad.rec, '010') AND phonelength THEN
			SET userName = '1';
		WHEN STARTSWITH(inPayLoad.rec, '012') AND phonelength THEN
			SET userName = '2';
		WHEN STARTSWITH(inPayLoad.rec, '011') AND phonelength THEN
			SET userName = '3';
		WHEN STARTSWITH(inPayLoad.rec, '015') AND phonelength THEN
			SET userName = '4';
			
		ELSE
			SET OutputLocalEnvironment.WrittenDestination.File.Name = Smsid ;
			PROPAGATE TO TERMINAL 1; -- 'out1'
			RETURN FALSE;
		END CASE;
		
		
		CALL CopyEntireMessage();
		CREATE LASTCHILD OF OutputRoot.XMLNSC.sms NAME 'USER' VALUE userName;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.sms NAME 'PASS' VALUE userPass;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.[I] = InputRoot.[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;